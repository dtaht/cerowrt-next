Index: dnsmasq-2.66/src/dhcp.c
===================================================================
--- dnsmasq-2.66.orig/src/dhcp.c	2012-12-19 14:45:21.000000000 +0100
+++ dnsmasq-2.66/src/dhcp.c	2012-12-19 15:21:08.356030650 +0100
@@ -132,7 +132,7 @@
   struct iovec iov;
   ssize_t sz; 
   int iface_index = 0, unicast_dest = 0, is_inform = 0;
-  struct in_addr iface_addr;
+  struct in_addr iface_addr, *addrp = NULL;
   struct iface_param parm;
 #ifdef HAVE_LINUX_NETWORK
   struct arpreq arp_req;
@@ -244,11 +244,9 @@
   
   ifr.ifr_addr.sa_family = AF_INET;
   if (ioctl(daemon->dhcpfd, SIOCGIFADDR, &ifr) != -1 )
-    iface_addr = ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr;
-  else
     {
-      my_syslog(MS_DHCP | LOG_WARNING, _("DHCP packet received on %s which has no address"), ifr.ifr_name);
-      return;
+      addrp = &iface_addr;
+      iface_addr = ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr;
     }
   
   for (tmp = daemon->dhcp_except; tmp; tmp = tmp->next)
@@ -262,7 +260,7 @@
   parm.current = NULL;
   parm.ind = iface_index;
 
-  if (!iface_check(AF_INET, (struct all_addr *)&iface_addr, ifr.ifr_name, NULL))
+  if (!iface_check(AF_INET, (struct all_addr *)addrp, ifr.ifr_name, NULL))
     {
       /* If we failed to match the primary address of the interface, see if we've got a --listen-address
 	 for a secondary */
@@ -281,7 +279,13 @@
 	 there is more than one address on the interface in the same subnet */
       complete_context(match.addr, iface_index, match.netmask, match.broadcast, &parm);
     }    
-      
+
+  if (!addrp)
+    {
+      my_syslog(MS_DHCP | LOG_WARNING, _("DHCP packet received on %s which has no address"), ifr.ifr_name);
+      return;
+    }
+
   if (!iface_enumerate(AF_INET, &parm, complete_context))
     return;
   
